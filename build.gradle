/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'andrew' at '12/17/14 10:09 PM' with Gradle 2.2
 *
 * This generated file contains a commented-out sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at http://gradle.org/docs/2.2/userguide/tutorial_java_projects.html
 */

/*
// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// In this section you declare the dependencies for your production and test code
dependencies {
    // The production code uses the SLF4J logging API at compile time
    compile 'org.slf4j:slf4j-api:1.7.7'

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile "junit:junit:4.11"
}
*/
apply plugin: 'java'
apply plugin: 'jetty'
apply plugin: 'war'

description = "Sample Project"
version = "0.1"

repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral();
}
ext {
    springIntegrationVersion = "4.1.1.RELEASE"
    jacksonVersion = "2.4.4"
}

dependencies {
    compile "org.springframework.integration:spring-integration-core:${springIntegrationVersion}"
    compile "org.springframework.integration:spring-integration-http:${springIntegrationVersion}"
    compile "org.springframework:spring-webmvc:${springIntegrationVersion}"
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
}


